name: First Workflow
on: 
  workflow_dispatch:
    inputs:
      timeoutValue:
        description: 'Provide timeout minutes to cancel job'
        required: false
        type: string
  workflow_run:
    workflows: ["First Cron Job"]
    types:
      - completed
  # schedule:
  #   - cron: '*/10 * * * *'

env:
  MOBILE_DEFAULT_VERSION: 130000
  timeoutValue: '${{ inputs.timeoutValue || vars.TIMEOUT_VALUE }}'

jobs:
  first-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: git
        id: artifact-version
        run: |
          echo "mobversion=$(git log develop --oneline | wc -l)" >> $GITHUB_OUTPUT
          echo ${{ vars.TIMEOUT_VALUE }}
          echo ${{ env.timeoutValue }}
          echo "The above is timeout Value from GH vars"
          echo ${{ github.repository_owner }}
          echo ${{ github.repository }}

      - name: Count Commits
        run: |
          result_add=$(($MOBILE_DEFAULT_VERSION + $(git log develop --oneline | wc -l)))
          echo "Addition: $result_add"

      - name: Print Goodbye
        run: echo "Done- Bye!!"

      - name: Get Job ID from GH API
        id: get-job-id
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          jobs=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id}}/attempts/${{ github.run_attempt }}/jobs)
          job_id=$(echo $jobs | jq -r '.jobs[] | select(.runner_name=="${{ runner.name }}") | .id')
          echo "job_id=$job_id" >> $GITHUB_OUTPUT
    
      - name: Display Job ID
        run: |
          echo Job ID: ${{ steps.get-job-id.outputs.job_id }}
          echo My full job URL is ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ steps.get-job-id.outputs.job_id }}

  second-job:
    needs: first-job
    runs-on: ubuntu-latest
    steps:
      - name: Print Goodbye
        run: echo "Done- Bye!!"

      - name: Get Job ID from GH API
        id: get-job-id
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          jobs=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id}}/attempts/${{ github.run_attempt }}/jobs)
          job_id=$(echo $jobs | jq -r '.jobs[] | select(.runner_name=="${{ runner.name }}") | .id')
          echo "job_id=$job_id" >> $GITHUB_OUTPUT
    
      - name: Display Job ID
        run: |
          echo Job ID: ${{ steps.get-job-id.outputs.job_id }}
          echo My full job URL is ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ steps.get-job-id.outputs.job_id }}
