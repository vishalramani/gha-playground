name: Test - 9 - Example Workflow

on:
  workflow_dispatch:

  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    # paths-ignore:
    #   - 'Dockerfile'

env:
  # test_secret: ${{ secrets.TEST_SECRET }}
  test_secret: 'Vishal123'

jobs:
  check-dockerfile-change:
    runs-on: ubuntu-latest
    outputs:
      dockerfile_changed: ${{ steps.check_changes.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check for changes in Dockerfile
        id: check_changes
        run: |
          git fetch --depth=2 # Ensure we have enough history
          if git diff --name-only HEAD^ HEAD | grep -q '^Dockerfile$'; then
            echo "Dockerfile has changed"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Dockerfile has not changed"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Run if Dockerfile changed
        if: steps.check_changes.outputs.changed == 'true'
        run: echo "This step runs because the Dockerfile has changed."

      - name: Run if Dockerfile did not change
        if: steps.check_changes.outputs.changed == 'false'
        run: echo "This step runs because the Dockerfile has not changed."

      - name: Run Always
        run: echo ${{ needs.check-dockerfile-change.outputs.dockerfile_changed }}

  build-image:
    needs: check-dockerfile-change
    if: needs.check-dockerfile-change.outputs.dockerfile_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Run if Dockerfile changed
        if: needs.check-dockerfile-change.outputs.dockerfile_changed == 'true'
        run: echo "This step runs because the Dockerfile has changed."

      - name: Run if Dockerfile did not change
        if: needs.check-dockerfile-change.outputs.dockerfile_changed == 'false'
        run: echo "This step runs because the Dockerfile has not changed."

      - name: Run Always
        run: echo ${{ needs.check-dockerfile-change.outputs.dockerfile_changed }}

  non-emulator-verification:
    name: Non Emulator Verification
    if: always() && needs.check-dockerfile-change.outputs.dockerfile_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Print Goodbye
        run: echo "Done- Bye!!"

  test-job:
    name: üß™ Test GH Secrets
    needs: [check-dockerfile-change, build-image]
    if: always()
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.test-secrets.outputs.image_tag }}
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4

      - name: üß™ Test GH Secrets
        id: test-secrets
        uses: ./.github/actions/test

  always-run-job:
    needs: [check-dockerfile-change, build-image, test-job]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run some commands
        id: file_check
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q 'Dockerfile'; then
            echo "::set-output name=run_job::true"
          else
            echo "::set-output name=run_job::false"
          fi

      - name: Conditional step
        if: steps.file_check.outputs.run_job == 'true'
        run: |
          echo "This job runs only when there's some change in 'Dockerfile'."

      - name: Check Outputs
        run: |
          echo "${{ needs.test-job.outputs.image-tag }}"
